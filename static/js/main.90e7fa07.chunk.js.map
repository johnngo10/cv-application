{"version":3,"sources":["components/PersonalInfo.js","components/Objective.js","components/Experience/Jobs.js","components/Experience/Experience.js","components/Education/School.js","components/Education/Education.js","components/Certification/Certificate.js","components/Certification/Certification.js","components/Resume.js","App.js","index.js"],"names":["PersonalInfo","props","this","handleChange","firstName","lastName","email","number","address","city","state","zip","title","id","className","name","placeholder","type","onChange","value","required","pattern","Component","Objective","objective","Jobs","input","e","setState","target","company","from","to","toDate","activities","jobs","jobArr","checked","submitted","bind","handlePresentDate","handlePushArr","handleAdd","handleDelete","handleSubmit","handleJobObjects","job","arr","push","handleRemoveJob","index","disabled","undefined","onClick","Experience","jobInputs","experience","jobsObj","handleAddJobs","handleConcatJobToArr","splice","handleExperienceChange","concat","map","School","schoolName","degree","schools","schoolArr","handleSchoolObjects","school","handleRemoveSchool","Education","schoolInputs","education","schoolObj","handleAddSchools","handleConcatSchoolToArr","handleEducationChange","Certificate","date","certs","handleCertsObjects","cert","handleRemoveCert","Certification","certInputs","certification","certObj","handleAddCerts","handleConcatCertsToArr","handleCertificationChange","Resume","handleClick","handleEdit","uniqid","App","preventDefault","onSubmit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90e7fa07.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass PersonalInfo extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      handleChange,\n      firstName,\n      lastName,\n      email,\n      number,\n      address,\n      city,\n      state,\n      zip,\n      title,\n    } = this.props;\n\n    return (\n      <div id='pesonal-info-form-container'>\n        <h2>Personal Information</h2>\n        <div className='pesonal-info-form'>\n          <input\n            className='persona-info-input'\n            name='first-name'\n            placeholder='First Name'\n            type='text'\n            onChange={handleChange('firstName')}\n            value={firstName}\n            required\n          ></input>\n          <input\n            className='persona-info-input'\n            name='last-name'\n            placeholder='Last Name'\n            type='text'\n            onChange={handleChange('lastName')}\n            value={lastName}\n            required\n          ></input>\n          <input\n            className='persona-info-input'\n            name='email'\n            placeholder='Email'\n            type='text'\n            onChange={handleChange('email')}\n            value={email}\n          ></input>\n          <input\n            className='persona-info-input'\n            name='phone'\n            placeholder='Phone Number'\n            type='tel'\n            pattern='[0-9]{3}-[0-9]{3}-[0-9]{4}'\n            onChange={handleChange('number')}\n            value={number}\n            required\n          ></input>\n        </div>\n        <div className='pesonal-info-form'>\n          <input\n            className='persona-info-input'\n            name='address'\n            placeholder='Address'\n            type='text'\n            onChange={handleChange('address')}\n            value={address}\n            required\n          ></input>\n          <input\n            className='persona-info-input'\n            name='city'\n            placeholder='City'\n            type='text'\n            onChange={handleChange('city')}\n            value={city}\n            required\n          ></input>\n          <input\n            className='persona-info-input'\n            name='state'\n            placeholder='State'\n            type='text'\n            onChange={handleChange('state')}\n            value={state}\n            required\n          ></input>\n          <input\n            className='persona-info-input'\n            name='zip'\n            placeholder='Zip'\n            type='text'\n            onChange={handleChange('zip')}\n            value={zip}\n            required\n          ></input>\n          <input\n            name='title'\n            placeholder='Title'\n            type='text'\n            id='persona-info-title'\n            onChange={handleChange('title')}\n            value={title}\n            required\n          ></input>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PersonalInfo;\n","import React, { Component } from 'react';\n\nclass Objective extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const { handleChange, objective } = this.props;\n    return (\n      <div id='resume-obj-container'>\n        <h2>Resume objective</h2>\n        <div>\n          <textarea\n            name='objective'\n            placeholder='Summarize your career goals'\n            onChange={handleChange('objective')}\n            value={objective}\n            required\n          ></textarea>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Objective;\n","import React, { Component } from 'react';\n\nclass Jobs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: '',\n      company: '',\n      from: '',\n      to: '',\n      toDate: '',\n      activities: '',\n      jobs: [],\n      jobArr: [],\n      checked: false,\n      submitted: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handlePresentDate = this.handlePresentDate.bind(this);\n    this.handlePushArr = this.handlePushArr.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // Push job array up to Experience Component\n  handlePushArr() {\n    const { jobs } = this.state;\n    const { handleJobObjects } = this.props;\n\n    handleJobObjects(jobs);\n  }\n\n  handleAdd() {\n    const {\n      title,\n      company,\n      from,\n      to,\n      activities,\n      checked,\n      submitted,\n    } = this.state;\n    const job = {\n      title: title,\n      company: company,\n      from: from,\n      to: to,\n      activities: activities,\n      checked: checked,\n      submitted: submitted,\n    };\n    let arr = [];\n    arr.push(job);\n\n    this.setState(\n      {\n        jobs: arr,\n      },\n      () => {\n        this.handlePushArr();\n      }\n    );\n  }\n\n  handleDelete() {\n    const { handleRemoveJob, index } = this.props;\n    handleRemoveJob(index);\n  }\n\n  handleSubmit() {\n    this.setState(\n      {\n        submitted: true,\n      },\n      () => {\n        this.handleAdd();\n      }\n    );\n  }\n\n  handleChange = input => e => {\n    this.setState({\n      [input]: e.target.value,\n    });\n  };\n\n  handlePresentDate(e) {\n    const check = e.target.checked;\n\n    if (check) {\n      this.setState({\n        toDate: this.state.to,\n        to: 'Present',\n        checked: true,\n      });\n    } else {\n      this.setState({\n        to: this.state.toDate,\n        checked: false,\n      });\n    }\n  }\n\n  render() {\n    const {\n      title,\n      company,\n      from,\n      to,\n      activities,\n      checked,\n      submitted,\n    } = this.props;\n\n    return (\n      <div className='experience-form'>\n        <input\n          name='title'\n          placeholder='Title'\n          type='text'\n          className='experience-fields'\n          value={title}\n          onChange={this.handleChange('title')}\n          disabled={submitted === undefined ? this.state.submitted : submitted}\n          required\n        ></input>\n        <input\n          name='company-name'\n          placeholder='Company'\n          type='text'\n          className='experience-fields'\n          value={company}\n          onChange={this.handleChange('company')}\n          disabled={submitted === undefined ? this.state.submitted : submitted}\n          required\n        ></input>\n        <input\n          placeholder='From:'\n          type='date'\n          className='experience-fields from-date'\n          value={from}\n          onChange={this.handleChange('from')}\n          disabled={submitted === undefined ? this.state.submitted : submitted}\n          required\n        ></input>\n        <input\n          placeholder='To:'\n          type='date'\n          className='experience-fields to-date'\n          value={to === 'Present' ? '' : to}\n          onChange={this.handleChange('to')}\n          disabled={\n            this.state.submitted\n              ? true\n              : this.state.checked\n              ? true\n              : submitted\n              ? true\n              : false\n          }\n          required\n        ></input>\n        <label className='switch'>\n          <input\n            type='checkbox'\n            className='toggle-ongoing'\n            onChange={this.handlePresentDate}\n            disabled={\n              submitted === undefined ? this.state.submitted : submitted\n            }\n            checked={checked === undefined ? this.state.checked : checked}\n          ></input>\n          <span className='slider round'>Present</span>\n        </label>\n        <textarea\n          name='activities'\n          placeholder='Activities & Responsiblities'\n          value={activities}\n          onChange={this.handleChange('activities')}\n          disabled={submitted === undefined ? this.state.submitted : submitted}\n          required\n        ></textarea>\n        {this.state.submitted === false && submitted === undefined ? (\n          <div>\n            <button\n              type='button'\n              className='submit-job'\n              onClick={this.handleSubmit}\n            >\n              <span>\n                <i className='fas fa-plus'></i>\n              </span>\n              Submit\n            </button>\n            <button\n              type='button'\n              className='cancel'\n              onClick={this.handleDelete}\n            >\n              Cancel\n            </button>\n          </div>\n        ) : (\n          <button type='button' className='delete' onClick={this.handleDelete}>\n            Delete\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Jobs;\n","import React, { Component } from 'react';\nimport Jobs from './Jobs';\n\nclass Experience extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      jobInputs: this.props.experience,\n      jobsObj: [],\n      arr: [],\n    };\n\n    this.handleAddJobs = this.handleAddJobs.bind(this);\n    this.handleConcatJobToArr = this.handleConcatJobToArr.bind(this);\n    this.handleJobObjects = this.handleJobObjects.bind(this);\n    this.handlePushArr = this.handlePushArr.bind(this);\n    this.handleRemoveJob = this.handleRemoveJob.bind(this);\n  }\n\n  handleAddJobs(e) {\n    let jobs = this.state.jobInputs;\n    jobs.push(1);\n    this.setState({\n      jobInputs: jobs,\n    });\n  }\n\n  handleRemoveJob(index) {\n    let arr = this.state.jobInputs;\n    arr.splice(index, 1);\n\n    this.setState(\n      {\n        jobInputs: arr,\n        jobsObj: arr,\n      },\n      () => {\n        this.handlePushArr();\n      }\n    );\n  }\n\n  // Push job array up to App Component\n  handlePushArr() {\n    const { jobsObj } = this.state;\n    const { handleExperienceChange } = this.props;\n\n    handleExperienceChange(jobsObj);\n  }\n\n  handleConcatJobToArr() {\n    const { jobsObj, arr } = this.state;\n    this.setState(\n      {\n        jobsObj: jobsObj.concat(arr),\n      },\n      () => {\n        this.handlePushArr();\n      }\n    );\n  }\n\n  handleJobObjects(arr) {\n    this.setState(\n      {\n        arr: arr,\n      },\n      () => {\n        this.handleConcatJobToArr();\n      }\n    );\n  }\n\n  render() {\n    const { jobInputs } = this.state;\n\n    return (\n      <div id='experience-container'>\n        <h2>Experience</h2>\n        {jobInputs.map((value, index) => {\n          return (\n            <Jobs\n              key={index}\n              index={index}\n              handleJobObjects={this.handleJobObjects}\n              handleRemoveJob={this.handleRemoveJob}\n              title={value.title}\n              company={value.company}\n              from={value.from}\n              to={value.to}\n              activities={value.activities}\n              checked={value.checked}\n              submitted={value.submitted}\n            />\n          );\n        })}\n        <button\n          type='button'\n          id='add-experience-button'\n          onClick={this.handleAddJobs}\n        >\n          <span>\n            <i className='fas fa-plus'></i>\n          </span>\n          Add\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Experience;\n","import React, { Component } from 'react';\n\nclass School extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      schoolName: '',\n      degree: '',\n      from: '',\n      to: '',\n      toDate: '',\n      schools: [],\n      schoolArr: [],\n      checked: false,\n      submitted: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handlePresentDate = this.handlePresentDate.bind(this);\n    this.handlePushArr = this.handlePushArr.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // Push school array up to Experience Component\n  handlePushArr() {\n    const { schools } = this.state;\n    const { handleSchoolObjects } = this.props;\n\n    handleSchoolObjects(schools);\n  }\n\n  handleAdd() {\n    const { schoolName, degree, from, to, checked, submitted } = this.state;\n    const school = {\n      schoolName: schoolName,\n      degree: degree,\n      from: from,\n      to: to,\n      checked: checked,\n      submitted: submitted,\n    };\n    let arr = [];\n    arr.push(school);\n\n    this.setState(\n      {\n        schools: arr,\n      },\n      () => {\n        this.handlePushArr();\n      }\n    );\n  }\n\n  handleDelete() {\n    const { handleRemoveSchool, index } = this.props;\n    handleRemoveSchool(index);\n  }\n\n  handleSubmit() {\n    this.setState(\n      {\n        submitted: true,\n      },\n      () => {\n        this.handleAdd();\n      }\n    );\n  }\n\n  handleChange = input => e => {\n    this.setState({\n      [input]: e.target.value,\n    });\n  };\n\n  handlePresentDate(e) {\n    const check = e.target.checked;\n\n    if (check) {\n      this.setState({\n        toDate: this.state.to,\n        to: 'Present',\n        checked: true,\n      });\n    } else {\n      this.setState({\n        to: this.state.toDate,\n        checked: false,\n      });\n    }\n  }\n  render() {\n    const { schoolName, degree, from, to, checked, submitted } = this.props;\n    return (\n      <div className='education-form'>\n        <div className='education-form'>\n          <input\n            name='school'\n            placeholder='Name of school or organization'\n            type='text'\n            className='education-input'\n            value={schoolName}\n            onChange={this.handleChange('schoolName')}\n            disabled={\n              submitted === undefined ? this.state.submitted : submitted\n            }\n          ></input>\n          <input\n            name='degree'\n            placeholder='Degree title'\n            type='text'\n            className='education-input'\n            value={degree}\n            onChange={this.handleChange('degree')}\n            disabled={\n              submitted === undefined ? this.state.submitted : submitted\n            }\n          ></input>\n          <input\n            name='from-date'\n            placeholder='From:'\n            type='date'\n            className='education-input from-date'\n            value={from}\n            onChange={this.handleChange('from')}\n            disabled={\n              submitted === undefined ? this.state.submitted : submitted\n            }\n          ></input>\n          <input\n            name='to-date'\n            placeholder='To:'\n            type='date'\n            className='to-date'\n            value={to === 'Present' ? '' : to}\n            onChange={this.handleChange('to')}\n            disabled={\n              this.state.submitted\n                ? true\n                : this.state.checked\n                ? true\n                : submitted\n                ? true\n                : false\n            }\n          ></input>\n          <label className='switch'>\n            <input\n              type='checkbox'\n              className='toggle-ongoing'\n              onChange={this.handlePresentDate}\n              disabled={\n                submitted === undefined ? this.state.submitted : submitted\n              }\n              checked={checked === undefined ? this.state.checked : checked}\n            ></input>\n            <span className='slider round'>Present</span>\n          </label>\n        </div>\n        {this.state.submitted === false && submitted === undefined ? (\n          <div>\n            <button\n              type='button'\n              className='submit-school'\n              onClick={this.handleSubmit}\n            >\n              <span>\n                <i className='fas fa-plus'></i>\n              </span>\n              Submit\n            </button>\n            <button\n              type='button'\n              className='cancel'\n              onClick={this.handleDelete}\n            >\n              Cancel\n            </button>\n          </div>\n        ) : (\n          <button type='button' className='delete' onClick={this.handleDelete}>\n            Delete\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default School;\n","import React, { Component } from 'react';\nimport School from './School';\n\nclass Education extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      schoolInputs: this.props.education,\n      schoolObj: [],\n      arr: [],\n    };\n\n    this.handleAddSchools = this.handleAddSchools.bind(this);\n    this.handleConcatSchoolToArr = this.handleConcatSchoolToArr.bind(this);\n    this.handleSchoolObjects = this.handleSchoolObjects.bind(this);\n    this.handlePushArr = this.handlePushArr.bind(this);\n    this.handleRemoveSchool = this.handleRemoveSchool.bind(this);\n  }\n\n  handleAddSchools(e) {\n    let schools = this.state.schoolInputs;\n    schools.push(1);\n    this.setState({\n      schoolInputs: schools,\n    });\n  }\n\n  handleRemoveSchool(index) {\n    let arr = this.state.schoolInputs;\n    arr.splice(index, 1);\n\n    this.setState(\n      {\n        schoolInputs: arr,\n        schoolObj: arr,\n      },\n      () => {\n        this.handlePushArr();\n      }\n    );\n  }\n\n  // Push education array up to App Component\n  handlePushArr() {\n    const { schoolObj } = this.state;\n    const { handleEducationChange } = this.props;\n\n    handleEducationChange(schoolObj);\n  }\n\n  handleConcatSchoolToArr() {\n    const { schoolObj, arr } = this.state;\n    this.setState(\n      {\n        schoolObj: schoolObj.concat(arr),\n      },\n      () => {\n        this.handlePushArr();\n      }\n    );\n  }\n\n  handleSchoolObjects(arr) {\n    this.setState(\n      {\n        arr: arr,\n      },\n      () => {\n        this.handleConcatSchoolToArr();\n      }\n    );\n  }\n\n  render() {\n    const { schoolInputs } = this.state;\n    return (\n      <div id='education-container'>\n        <h2>Education</h2>\n        {schoolInputs.map((value, index) => {\n          return (\n            <School\n              key={index}\n              index={index}\n              handleRemoveSchool={this.handleRemoveSchool}\n              handleSchoolObjects={this.handleSchoolObjects}\n              schoolName={value.schoolName}\n              degree={value.degree}\n              from={value.from}\n              to={value.to}\n              checked={value.checked}\n              submitted={value.submitted}\n            />\n          );\n        })}\n        <button\n          type='button'\n          id='add-education-button'\n          onClick={this.handleAddSchools}\n        >\n          <span>\n            <i className='fas fa-plus'></i>\n          </span>\n          Add\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Education;\n","import React, { Component } from 'react';\n\nclass Certificate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      date: '',\n      certs: [],\n      checked: false,\n      submitted: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handlePushArr = this.handlePushArr.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handlePushArr() {\n    const { certs } = this.state;\n    const { handleCertsObjects } = this.props;\n    handleCertsObjects(certs);\n  }\n\n  handleAdd() {\n    const { name, date, submitted } = this.state;\n    const cert = {\n      name: name,\n      date: date,\n      submitted: submitted,\n    };\n    let arr = [];\n    arr.push(cert);\n\n    this.setState(\n      {\n        certs: arr,\n      },\n      () => {\n        this.handlePushArr();\n      }\n    );\n  }\n\n  handleDelete() {\n    const { handleRemoveCert, index } = this.props;\n    handleRemoveCert(index);\n  }\n\n  handleSubmit() {\n    this.setState(\n      {\n        submitted: true,\n      },\n      () => {\n        this.handleAdd();\n      }\n    );\n  }\n\n  handleChange = input => e => {\n    this.setState({\n      [input]: e.target.value,\n    });\n  };\n\n  render() {\n    const { name, date, submitted } = this.props;\n    return (\n      <div className='cert-form'>\n        <input\n          placeholder='name'\n          type='text'\n          value={name}\n          disabled={submitted === undefined ? this.state.submitted : submitted}\n          onChange={this.handleChange('name')}\n        ></input>\n        <input\n          placeholder='Date of completion'\n          type='date'\n          value={date}\n          disabled={submitted === undefined ? this.state.submitted : submitted}\n          onChange={this.handleChange('date')}\n        ></input>\n        {this.state.submitted === false && submitted === undefined ? (\n          <div>\n            <button\n              type='button'\n              className='submit-cert'\n              onClick={this.handleSubmit}\n            >\n              <span>\n                <i className='fas fa-plus'></i>\n              </span>\n              Submit\n            </button>\n            <button\n              type='button'\n              className='cancel'\n              onClick={this.handleDelete}\n            >\n              Cancel\n            </button>\n          </div>\n        ) : (\n          <button type='button' className='delete' onClick={this.handleDelete}>\n            Delete\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Certificate;\n","import React, { Component } from 'react';\nimport Certificate from './Certificate';\n\nclass Certification extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      certInputs: this.props.certification,\n      certObj: [],\n      arr: [],\n    };\n\n    this.handleAddCerts = this.handleAddCerts.bind(this);\n    this.handleConcatCertsToArr = this.handleConcatCertsToArr.bind(this);\n    this.handleCertsObjects = this.handleCertsObjects.bind(this);\n    this.handlePushArr = this.handlePushArr.bind(this);\n    this.handleRemoveCert = this.handleRemoveCert.bind(this);\n  }\n\n  handleAddCerts(e) {\n    let certs = this.state.certInputs;\n    certs.push(1);\n    this.setState({\n      certInputs: certs,\n    });\n  }\n\n  // Push education array up to App Component\n  handlePushArr() {\n    const { certObj } = this.state;\n    const { handleCertificationChange } = this.props;\n\n    handleCertificationChange(certObj);\n  }\n\n  handleConcatCertsToArr() {\n    const { certObj, arr } = this.state;\n    this.setState(\n      {\n        certObj: certObj.concat(arr),\n      },\n      () => {\n        this.handlePushArr();\n      }\n    );\n  }\n\n  handleCertsObjects(arr) {\n    this.setState(\n      {\n        arr: arr,\n      },\n      () => {\n        this.handleConcatCertsToArr();\n      }\n    );\n  }\n\n  handleRemoveCert(index) {\n    let arr = this.state.certInputs;\n    arr.splice(index, 1);\n\n    this.setState(\n      {\n        certInputs: arr,\n        certObj: arr,\n      },\n      () => {\n        this.handlePushArr();\n      }\n    );\n  }\n\n  render() {\n    const { certInputs } = this.state;\n    return (\n      <div id='cert-container'>\n        <h2>Licenses & Certificates</h2>\n\n        {certInputs.map((value, index) => {\n          return (\n            <Certificate\n              key={index}\n              index={index}\n              handleCertsObjects={this.handleCertsObjects}\n              handleRemoveCert={this.handleRemoveCert}\n              name={value.name}\n              date={value.date}\n              submitted={value.submitted}\n            />\n          );\n        })}\n        <button\n          type='button'\n          id='add-education-button'\n          onClick={this.handleAddCerts}\n        >\n          <span>\n            <i className='fas fa-plus'></i>\n          </span>\n          Add\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Certification;\n","import React, { Component } from 'react';\nimport uniqid from 'uniqid';\n\nclass Resume extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    const { handleEdit } = this.props;\n    handleEdit();\n  }\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      email,\n      number,\n      address,\n      city,\n      state,\n      zip,\n      objective,\n      title,\n      experience,\n      education,\n      certification,\n    } = this.props;\n\n    return (\n      <div id='resume-container'>\n        <header id='header'>\n          <h1 id='name'>\n            {firstName} {lastName}\n          </h1>\n          <div className='divider'></div>\n          <div id='title'>{title}</div>\n          <button type='button' className='edit' onClick={this.handleClick}>\n            <i className='fas fa-edit'></i>\n          </button>\n        </header>\n        <main id='main'>\n          <div id='col-1'>\n            <div id='objective'>\n              <div>\n                <h2 className='category'>Resume Objective</h2>\n                <p>{objective}</p>\n              </div>\n            </div>\n            <div>\n              <h2 className='category'>EXPERIENCE</h2>\n              <div>\n                {experience.map(job => {\n                  return (\n                    <div className='jobs' key={uniqid()}>\n                      <h3>{job.title}</h3>\n                      <h4>\n                        {job.company} / {job.from} - {job.to}\n                      </h4>\n                      <p>{job.activities}</p>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          <div id='col-2'>\n            <div id='info-container'>\n              <div className='info'>\n                <i className='fas fa-envelope info-icon'></i>\n                <p>{email}</p>\n              </div>\n              <div className='info'>\n                <i className='fas fa-phone info-icon'></i>\n                <p>{number}</p>\n              </div>\n              <div className='info'>\n                <i className='fas fa-map-marker-alt info-icon'></i>\n                <p>\n                  {address}, {city} {state} {zip}\n                </p>\n              </div>\n            </div>\n            <div className='education-container'>\n              <h2 className='category'>EDUCATION</h2>\n              {education.map(school => {\n                return (\n                  <div key={uniqid()}>\n                    <h3>{school.schoolName}</h3>\n                    <p>{school.degree}</p>\n                    <p>\n                      {school.from} - {school.to}\n                    </p>\n                  </div>\n                );\n              })}\n            </div>\n            <div id='certification-container'>\n              <h2 className='category'>LICENSES & CERTIFICATES</h2>\n              {certification.map(cert => {\n                return (\n                  <div key={uniqid()}>\n                    <p>{cert.name}</p>\n                    <p>{cert.date}</p>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Resume;\n","import React, { Component } from 'react';\nimport PersonalInfo from './components/PersonalInfo';\nimport Objective from './components/Objective';\nimport Experience from './components/Experience/Experience';\nimport Education from './components/Education/Education';\nimport Certification from './components/Certification/Certification';\nimport Resume from './components/Resume';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      number: '',\n      address: '',\n      city: '',\n      state: '',\n      zip: '',\n      title: '',\n      objective: '',\n      experience: [],\n      education: [],\n      certification: [],\n      submitted: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleExperienceChange = this.handleExperienceChange.bind(this);\n    this.handleEducationChange = this.handleEducationChange.bind(this);\n    this.handleCertificationChange = this.handleCertificationChange.bind(this);\n  }\n\n  handleChange = input => e => {\n    this.setState({\n      [input]: e.target.value,\n    });\n  };\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: true,\n    });\n  }\n\n  handleEdit() {\n    this.setState({\n      submitted: false,\n    });\n  }\n\n  handleExperienceChange(arr) {\n    this.setState({\n      experience: arr,\n    });\n  }\n\n  handleEducationChange(arr) {\n    this.setState({\n      education: arr,\n    });\n  }\n\n  handleCertificationChange(arr) {\n    this.setState({\n      certification: arr,\n    });\n  }\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      email,\n      number,\n      address,\n      city,\n      state,\n      zip,\n      title,\n      objective,\n      experience,\n      education,\n      certification,\n      submitted,\n    } = this.state;\n\n    return (\n      <div className='App'>\n        {submitted ? (\n          <Resume\n            firstName={firstName}\n            lastName={lastName}\n            email={email}\n            number={number}\n            address={address}\n            city={city}\n            state={state}\n            zip={zip}\n            objective={objective}\n            title={title}\n            experience={experience}\n            education={education}\n            certification={certification}\n            handleEdit={this.handleEdit}\n          />\n        ) : (\n          <form id='form' onSubmit={this.handleSubmit}>\n            <PersonalInfo\n              handleChange={this.handleChange}\n              firstName={firstName}\n              lastName={lastName}\n              email={email}\n              number={number}\n              address={address}\n              city={city}\n              state={state}\n              zip={zip}\n              title={title}\n            />\n            <Objective handleChange={this.handleChange} objective={objective} />\n            <Experience\n              handleExperienceChange={this.handleExperienceChange}\n              experience={experience}\n            />\n            <Education\n              handleEducationChange={this.handleEducationChange}\n              education={education}\n            />\n            <Certification\n              handleCertificationChange={this.handleCertificationChange}\n              certification={certification}\n            />\n            <div id='submit-container'>\n              <input type='submit' id='submit'></input>\n            </div>\n          </form>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}